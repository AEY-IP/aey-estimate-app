// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  username     String    @unique
  passwordHash String
  role         String    // "ADMIN" | "MANAGER"
  name         String
  phone        String?
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Связи
  createdClients   Client[]
  createdEstimates Estimate[]
  deletedEstimates DeletedEstimate[]

  @@map("users")
}

model Client {
  id             String    @id @default(cuid())
  name           String
  phone          String?
  email          String?
  address        String?
  contractNumber String?
  notes          String?
  isActive       Boolean   @default(true)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  // Связи
  createdBy String
  creator   User        @relation(fields: [createdBy], references: [id])
  estimates Estimate[]

  @@map("clients")
}

model WorkItem {
  id          String   @id @default(cuid())
  name        String
  unit        String
  price       Float
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Связи
  blockId     String
  block       WorkBlock @relation(fields: [blockId], references: [id])
  works       EstimateWork[]
  parameterId String?
  parameter   RoomParameter? @relation(fields: [parameterId], references: [id])

  @@map("work_items")
}

model WorkBlock {
  id          String     @id @default(cuid())
  title       String
  description String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Связи
  items       WorkItem[]

  @@map("work_blocks")
}

model RoomParameter {
  id          String     @id @default(cuid())
  name        String
  unit        String
  description String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Связи
  workItems   WorkItem[]
  parameterValues EstimateRoomParameterValue[]

  @@map("room_parameters")
}

model Coefficient {
  id          String   @id @default(cuid())
  name        String
  value       Float
  description String?
  category    String   @default("custom") // region, complexity, urgency, season, custom
  type        String   @default("normal") // normal, final
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("coefficients")
}

model Estimate {
  id                   String      @id @default(cuid())
  title                String
  type                 String      // "rooms" | "blocks"
  category             String      // "main" | "additional"
  totalWorksPrice      Float       @default(0)
  totalMaterialsPrice  Float       @default(0)
  totalPrice           Float       @default(0)
  notes                String?
  coefficientsData     String?     // JSON массив ID коэффициентов
  coefficientSettings  String?     // JSON настройки применения коэффициентов
  manualPrices         String?     // JSON массив ID позиций с ручной ценой
  worksBlock           String?     // JSON данные блока работ для смет apartment
  materialsBlock       String?     // JSON данные блока материалов для смет apartment
  summaryWorksBlock    String?     // JSON данные сводного блока работ для смет rooms
  summaryMaterialsBlock String?    // JSON данные сводного блока материалов для смет rooms
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt

  // Связи
  clientId  String
  client    Client @relation(fields: [clientId], references: [id])
  createdBy String
  creator   User   @relation(fields: [createdBy], references: [id])

  rooms EstimateRoom[]
  coefficients EstimateCoefficient[]
  roomParameterValues EstimateRoomParameterValue[]

  @@map("estimates")
}

model EstimateRoom {
  id                  String  @id @default(cuid())
  name                String
  totalWorksPrice     Float   @default(0)
  totalMaterialsPrice Float   @default(0)
  totalPrice          Float   @default(0)
  worksBlockStructure String? // JSON структура блоков работ с порядком
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Связи
  estimateId String
  estimate   Estimate @relation(fields: [estimateId], references: [id], onDelete: Cascade)

  works     EstimateWork[]
  materials EstimateMaterial[]
  roomParameterValues EstimateRoomParameterValue[]

  @@map("estimate_rooms")
}

model EstimateWork {
  id          String  @id @default(cuid())
  quantity    Float
  price       Float
  totalPrice  Float
  description String?
  blockTitle  String? // Пользовательское название блока/категории

  // Связи
  roomId     String
  room       EstimateRoom @relation(fields: [roomId], references: [id], onDelete: Cascade)
  workItemId String
  workItem   WorkItem     @relation(fields: [workItemId], references: [id])

  @@map("estimate_works")
}

model EstimateMaterial {
  id          String  @id @default(cuid())
  name        String
  unit        String
  quantity    Float
  price       Float
  totalPrice  Float
  description String?

  // Связи
  roomId String
  room   EstimateRoom @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("estimate_materials")
}

model EstimateCoefficient {
  id          String @id @default(cuid())
  name        String
  value       Float
  description String?

  // Связи
  estimateId String
  estimate   Estimate @relation(fields: [estimateId], references: [id], onDelete: Cascade)

  @@map("estimate_coefficients")
}

model EstimateRoomParameterValue {
  id          String @id @default(cuid())
  parameterId String
  parameter   RoomParameter @relation(fields: [parameterId], references: [id])
  value       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Связи
  estimateId String?
  estimate   Estimate? @relation(fields: [estimateId], references: [id], onDelete: Cascade)
  roomId     String?
  room       EstimateRoom? @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("estimate_room_parameter_values")
}

model DeletedEstimate {
  id                   String   @id @default(cuid())
  originalId           String   // ID оригинальной сметы
  title                String
  type                 String
  category             String
  totalWorksPrice      Float
  totalMaterialsPrice  Float
  totalPrice           Float
  notes                String?
  coefficientsData     String?
  coefficientSettings  String?
  manualPrices         String?
  estimateData         String   // JSON с полными данными сметы
  
  // Информация об удалении
  deletedAt            DateTime @default(now())
  deletedBy            String
  deletedUser          User     @relation(fields: [deletedBy], references: [id])
  
  // Оригинальные связи (сохраняем ID)
  clientId             String
  originalCreatedBy    String
  originalCreatedAt    DateTime
  originalUpdatedAt    DateTime

  @@map("deleted_estimates")
} 